#!/bin/bash

ENV_NAME="tree_sitter_env"

PYTHON_VERSION="3.9"

ENV_EXISTS=$(conda env list | grep $ENV_NAME | wc -l)
if [ $ENV_EXISTS -eq 0 ]; then
    echo "Creating conda environment $ENV_NAME"
    conda create -n $ENV_NAME python=$PYTHON_VERSION
fi

echo "Installing tree-sitter"
conda run -n "$ENV_NAME" pip install tree-sitter

echo "Downloading tree-sitter grammars"
# List of languages to install parsers for
# many of these can't be found on pip though...
LANGS=(
    "ada"
    "agda"
    "sfapex"
    "apex"
    "eventrule"
    "bash"
    "beancount"
    "capnp"
    "c"
    "cpp"
    "c-sharp"
    "cel"
    "clojure"
    "cmake"
    "cobol"
    "commonlisp"
    "css"
    "cuda"
    "dart"
    "d"
    "dockerfile"
    "dot"
    "elixir"
    "elm"
    "elisp"
    "eno"
    "embedded-template"
    "erlang"
    "fennel"
    "fish"
    "formula"
    "fortran"
    "gitattributes"
    "gitignore"
    "gleam"
    "glsl"
    "go"
    "go-mod"
    "go-work"
    "graphql"
    "hack"
    "haskell"
    "hcl"
    "html"
    "ispc"
    "java"
    "javascript"
    "jq"
    "json"
    "json5"
    "julia"
    "just"
    "kotlin"
    "lalrpop"
    "latex"
    "lean"
    "llvm"
    "llvm-mir"
    "llvm-mlir"
    "tablegen"
    "lua"
    "magik"
    "make"
    "markdown"
    "meson"
    "m68k"
    "nginx"
    "nim"
    "nix"
    "noir"
    "objc"
    "ocaml"
    "odin"
    "ohm"
    "org"
    "p4"
    "pascal"
    "perl"
    "pod"
    "pgn"
    "powershell"
    "proto"
    "python"
    "qmljs"
    "quakec"
    "racket"
    "rasi"
    "re2c"
    "regex"
    "rego"
    "rst"
    "r"
    "robot"
    "ruby"
    "rust"
    "scala"
    "scheme"
    "scss"
    "sexp"
    "smali"
    "sourcepawn"
    "sparql"
    "sql-bigquery"
    "sql"
    "sqlite"
    "ssh-client-config"
    "supercollider"
    "svelte"
    "swift"
    "systemrdl"
    "tact"
    "thrift"
    "comment"
    "toml"
    "query"
    "turtle"
    "twig"
    "typescript"
    "ungrammar"
    "usd"
    "verilog"
    "vhdl"
    "vue"
    "wasm"
    "wdl"
    "wgsl"
    "yaml"
    "yang"
    "yuck"
    "zig"
)

for LANGUAGE in "${LANGS[@]}"; do
    # Convert language names to tree-sitter package format
    PACKAGE_NAME="tree-sitter-${LANGUAGE}"
    echo "Installing $PACKAGE_NAME..."
    conda run -n "$ENV_NAME" pip install "$PACKAGE_NAME"
done

echo "All grammars installed"